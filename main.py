from aiogram import Bot, Dispatcher, executor, types

API_TOKEN = '8457232343:AAEfoiLRidEmOFDweVFP5FqVJLEcJP9wkaw'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω—É WinSoftMarket.\n"
        "–¢—É—Ç —Ç–∏ –º–æ–∂–µ—à –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü–∏—Ñ—Ä–æ–≤–∏–π –ø—Ä–æ–º–æ–∫–æ–¥ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏.\n\n"
        "üìã –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "/getcode ‚Äî –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥\n"
        "/info ‚Äî –ø—Ä–æ –º–∞–≥–∞–∑–∏–Ω\n"
        "/help ‚Äî —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è"
    )

@dp.message_handler(commands=['info'])
async def info(message: types.Message):
    await message.answer(
        "üõçÔ∏è WinSoftMarket ‚Äî —Ü–µ —Ü–∏—Ñ—Ä–æ–≤–∏–π –º–∞–≥–∞–∑–∏–Ω –ª—ñ—Ü–µ–Ω–∑—ñ–π–Ω–∏—Ö –∫–ª—é—á—ñ–≤ —Ç–∞ –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤.\n"
        "üéÅ –ü—Ä–æ–ø–æ–Ω—É—î–º–æ –∫–æ–¥–∏ –¥–ª—è YouTV, Sweet.TV, Windows, Office —Ç–æ—â–æ."
    )

@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.answer(
        "‚ÑπÔ∏è –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥:\n"
        "1Ô∏è‚É£ –û–ø–ª–∞—Ç–∏ —Ç–æ–≤–∞—Ä –Ω–∞ —Å–∞–π—Ç—ñ WinSoftMarket.\n"
        "2Ô∏è‚É£ –í—ñ–¥–ø—Ä–∞–≤ –∫–æ–º–∞–Ω–¥—É /getcode.\n"
        "3Ô∏è‚É£ –û—Ç—Ä–∏–º–∞–π —Å–≤—ñ–π –ø—Ä–æ–º–æ–∫–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ üí•"
    )

@dp.message_handler(commands=['getcode'])
async def get_code(message: types.Message):
    try:
        with open("codes.txt", "r") as f:
            codes = f.readlines()

        if not codes:
            await message.answer("‚ùå –ü—Ä–æ–º–æ–∫–æ–¥–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—å.")
            return

        code = codes[0].strip()
        await message.answer(f"‚úÖ –í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥: {code}")

        with open("codes.txt", "w") as f:
            f.writelines(codes[1:])
    except FileNotFoundError:
        await message.answer("‚ö†Ô∏è –§–∞–π–ª codes.txt –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –î–æ–¥–∞–π—Ç–µ –π–æ–≥–æ –≤ –ø–∞–ø–∫—É.")
    except Exception as e:
        await message.answer(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)